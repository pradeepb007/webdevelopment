<template>
  <div>
    <a-table :data-source="flattenData">
      <a-table-column title="Publisher Name" dataIndex="Name" key="Name">
        <template v-slot="{ text, record }">
          <a @click="toggleRow(record)">{{ text }}</a>
        </template>
      </a-table-column>
      <a-table-column
        v-for="month in months"
        :key="month"
        :title="month"
        :data-index="month"
      >
        <template v-slot="{ text, record }">
          <span v-if="showData[record.key]">
            {{ getMonthData(record, month).One }} / {{ getMonthData(record, month).Two }}
          </span>
        </template>
      </a-table-column>
    </a-table>
    <div v-for="(show, key) in showData" :key="key">
      <a-checkbox :checked="show" @change="toggleData(key)">Show Months Data</a-checkbox>
    </div>
  </div>
</template>

<script lang="ts">
import { defineComponent, ref, computed } from "vue";
import { ATable, ACheckbox } from "ant-design-vue";

export default defineComponent({
  components: {
    ATable,
    ACheckbox,
  },
  data() {
    return {
      data: [
        {
          key: 1,
          Name: "Test name",
          MonthsData: {
            Jan: { One: 30, Two: 20 },
            Feb: { One: 50, Two: 30 },
            Mar: { One: 60, Two: 70 },
          },
        },
        // Add more data objects here if needed
      ],
      months: ["Jan", "Feb", "Mar"], // List of month names
    };
  },
  setup() {
    const showData = ref<{ [key: number]: boolean }>({});

    const toggleRow = (record: { key: number }) => {
      showData.value[record.key] = !showData.value[record.key];
    };

    const toggleData = (key: number) => {
      // Handle checkbox change to show/hide data
    };

    const getMonthData = (record: any, month: string) => {
      return record.MonthsData[month];
    };

    const flattenData = computed(() => {
      // Flatten the data structure to have one row per month
      const flattened: any[] = [];
      this.data.forEach((publisher) => {
        const rowData: any = { Name: publisher.Name, key: publisher.key };
        this.months.forEach((month) => {
          rowData[month] = null; // Initialize columns for each month
        });
        flattened.push(rowData);
      });
      return flattened;
    });

    return {
      flattenData,
      showData,
      toggleRow,
      toggleData,
      getMonthData,
    };
  },
});
</script>
